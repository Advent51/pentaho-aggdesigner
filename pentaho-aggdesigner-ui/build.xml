<!--===========================================================================
  This is the build file for the Pentaho Aggregation Designer project.
  
  This build file will use the build-res/subfloor.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See build-res/subfloor.xml for more details
============================================================================-->
<project name="Pentaho Aggregation Designer" basedir="." default="dist">

  <description>
	  This build file is used to create the API project
		and works with the build-res/subfloor.xml file.
	</description>

  <!-- Define the default location of the common build file -->
  <property name="common.build.file"
            value="./build-res/subfloor-pkg.xml"
            description="This is the location of the standardized build-res/subfloor.xml file" />

  <!-- Import the build-res/subfloor.xml file which contains all the default tasks -->
  <import file="${common.build.file}" />

  <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN build-res/subfloor.xml.
    -->

  <property name="stage.dir" value="${bin.dir}/stage" description="Package staging" />
  <property name="approot.stage.dir" value="${stage.dir}/aggregation-designer" description="Stage application root dir" />
  <property name="productId" value="pad" />
  <property name="releaseType" value="ce" />
  <property name="package.basename" value="${productId}-${releaseType}-${project.revision}" />
  <property name="package.zipfile" value="${dist.dir}/${package.artifact.id}-${project.revision}.zip" />
  <property name="package.resdir" value="${basedir}/package-res" />
	
	
	  <!-- ======================================== EULA assembly packaging ========================================= -->

		<property name="pentaho-eula-assembly-pom.version" value="1.0.9" />

		<target name="package-eula" depends="install-antcontrib">

			<if>
				<not>
					<available file="${dist.dir}/pentaho-eula-assembly-pom-${pentaho-eula-assembly-pom.version}-pom.xml" type="file" />
				</not>
				<then>
					<get src="http://repo.pentaho.org/artifactory/private-release/com/pentaho/pentaho-eula-assembly-pom/${pentaho-eula-assembly-pom.version}/pentaho-eula-assembly-pom-${pentaho-eula-assembly-pom.version}-pom.xml" 
		              dest="${dist.dir}/pentaho-eula-assembly-pom-${pentaho-eula-assembly-pom.version}-pom.xml" 
		              verbose="true" />
				</then>
			</if>

			<echo>
		          mvn
		          -f
		          ${dist.dir}/pentaho-eula-assembly-pom-${pentaho-eula-assembly-pom.version}-pom.xml
		          -DartifactName=${artifactName}
		          -Ddist.dir=${dist.dir}
		          package
		        </echo>
			<if>
				<isset property="isWindows" />
				<then>
					<exec executable="cmd">
						<arg value="/c" />
						<arg value="mvn.bat" />
						<arg value="-f" />
						<arg value="${dist.dir}/pentaho-eula-assembly-pom-${pentaho-eula-assembly-pom.version}-pom.xml" />
						<arg value="-DartifactName=${artifactName}" />
						<arg value="-Ddist.dir=${dist.dir}" />
						<arg value="package" />
					</exec>
				</then>
				<else>
					<exec executable="mvn">
						<arg value="-f" />
						<arg value="${dist.dir}/pentaho-eula-assembly-pom-${pentaho-eula-assembly-pom.version}-pom.xml" />
						<arg value="-DartifactName=${artifactName}" />
						<arg value="-Ddist.dir=${dist.dir}" />
						<arg value="package" />
					</exec>
				</else>
			</if>

		</target>
	
	
</project>
